---
import DocsLayout from '../../../layouts/docs-layout.astro';
import { getAllComponents } from '../../../lib/content';
import CodeBlock from '../../../components/code-block.astro';
import ComponentPreview from '../../../components/component-preview.astro';
import PackageManagerTabs from '../../../components/package-manager-tabs.astro';
import ColorPicker from '../../../components/color-picker.astro';
import type { GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';

export const getStaticPaths: GetStaticPaths = async () => {
  const componentEntries = await getAllComponents();
  return componentEntries.map((component) => ({
    params: { slug: component.slug },
    props: { entry: component },
  }));
};

interface Props {
  entry: CollectionEntry<'components'>;
}

const { entry } = Astro.props as Props;
const { Content } = await entry.render();

// Component registry for MDX
const components = {
  CodeBlock,
  ComponentPreview,
  PackageManagerTabs,
  ColorPicker,
};
---

<DocsLayout title={`${entry.data.title} - DocyUI`} description={entry.data.description}>
  <div class="pb-12 pt-8">
    <div class="flex flex-col items-start gap-4 md:flex-row md:justify-between md:gap-8">
      <div class="flex-1 space-y-4">
        <h1 class="inline-block font-heading text-4xl tracking-tight lg:text-5xl">
          <span class="docyui-gradient-text">{entry.data.title}</span>
        </h1>
        {entry.data.description && (
          <p class="text-xl text-muted-foreground leading-relaxed">
            {entry.data.description}
          </p>
        )}
      </div>
    </div>
  </div>

  <Content components={components} />
</DocsLayout>