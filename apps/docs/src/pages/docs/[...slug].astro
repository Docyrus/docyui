---
import DocsLayout from '../../layouts/docs-layout.astro';
import { getAllDocs } from '../../lib/content';
import CodeBlock from '../../components/code-block.astro';
import ComponentPreview from '../../components/component-preview.astro';
import PackageManagerTabs from '../../components/package-manager-tabs.astro';
import ColorPicker from '../../components/color-picker.astro';
import type { GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';

export const getStaticPaths: GetStaticPaths = async () => {
  const docs = await getAllDocs();
  return docs.map((doc) => ({
    params: { slug: doc.slug },
    props: { entry: doc },
  }));
};

interface Props {
  entry: CollectionEntry<'docs'>;
}

const { entry } = Astro.props as Props;
const { Content } = await entry.render();

// Component registry for MDX
const components = {
  CodeBlock,
  ComponentPreview,
  PackageManagerTabs,
  ColorPicker,
};
---

<DocsLayout title={`${entry.data.title} - DocyUI`} description={entry.data.description}>
  <div class="pb-12 pt-8">
    <div class="flex flex-col items-start gap-4 md:flex-row md:justify-between md:gap-8">
      <div class="flex-1 space-y-4">
        <h1 class="inline-block font-heading text-4xl tracking-tight lg:text-5xl">
          <span class="docyui-gradient-text">{entry.data.title}</span>
        </h1>
        {entry.data.description && (
          <p class="text-xl text-muted-foreground leading-relaxed">
            {entry.data.description}
          </p>
        )}
      </div>
    </div>
  </div>

  <Content components={components} />
</DocsLayout>

<style>
  @reference "../../styles/global.css";
  
  .prose {
    @apply text-foreground;
  }
  
  .prose h1 {
    @apply text-3xl font-heading font-bold tracking-tight text-foreground;
  }
  
  .prose h2 {
    @apply text-2xl font-heading font-semibold tracking-tight text-foreground mt-8 mb-4;
  }
  
  .prose h3 {
    @apply text-lg font-heading font-semibold text-foreground mt-6 mb-3;
  }
  
  .prose p {
    @apply text-muted-foreground leading-relaxed;
  }
  
  .prose code {
    @apply bg-muted px-1 py-0.5 rounded text-sm font-mono text-foreground;
  }
  
  .prose pre {
    @apply bg-muted border rounded-lg p-4 overflow-x-auto;
  }
  
  .prose pre code {
    @apply bg-transparent p-0 text-sm;
  }
  
  .prose ul {
    @apply list-disc pl-6 space-y-2;
  }
  
  .prose ol {
    @apply list-decimal pl-6 space-y-2;
  }
  
  .prose li {
    @apply text-muted-foreground;
  }
  
  .prose a {
    @apply text-primary hover:text-primary/80 font-medium;
  }
  
  .component-placeholder {
    @apply bg-muted/50 border border-dashed border-muted-foreground/50 rounded p-4 text-center text-sm text-muted-foreground;
  }
</style>